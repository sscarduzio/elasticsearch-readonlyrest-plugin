/*
 *    This file is part of ReadonlyREST.
 *
 *    ReadonlyREST is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    ReadonlyREST is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with ReadonlyREST.  If not, see http://www.gnu.org/licenses/
 */

buildscript {
    ext {
        pluginVersion = rootProject.properties['pluginVersion']
        esVersion = project.properties['esVersion']
        pluginName = rootProject.properties['pluginName']
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:0.15.0"
    }
}

repositories {
    mavenCentral()
}

group = 'org.elasticsearch.plugin'
version = pluginVersion + '_es' + esVersion
def proxyFullName = pluginName + '-' + version

apply plugin: 'scala'
apply plugin: 'maven'
apply plugin: "com.github.hierynomus.license"

compileScala {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

configurations {
    distJars {
        extendsFrom runtime
    }
}

dependencies {
    compile  project(path: ':es78x')

    compile  group: 'org.elasticsearch.client',             name: 'elasticsearch-rest-high-level-client',   version: esVersion
    compile  group: 'org.javassist',                        name: 'javassist',                              version: '3.26.0-GA'
    compile  group: 'org.jooq',                             name: 'joor-java-8',                            version: '0.9.13'
    compile  group: 'org.codelibs.elasticsearch.module',    name: 'lang-mustache',                          version: esVersion
    compile  group: 'org.apache.logging.log4j',             name: 'log4j-core',                             version: '2.11.0'
    compile  group: 'org.codelibs.elasticsearch.module',    name: 'reindex',                                version: esVersion
}

license {
    header rootProject.file('BeshuLimitedLicenseHeader.txt')
    skipExistingHeaders true
    useDefaultMappings = false
    mapping {
        java = 'SLASHSTAR_STYLE'
        scala = 'SLASHSTAR_STYLE'
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.additionalParameters = ["-Ypartial-unification", "-Ywarn-macros:after", "-feature"]
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath, algorithm: 'sha1'
    }
}

task generateVersionsFile() {
    outputs.upToDateWhen { false }
    doFirst {
        def resourcesDir = sourceSets.main.output.resourcesDir
        println(resourcesDir)
        resourcesDir.mkdirs()
        def contents = "es_version=$esVersion\nplugin_version=$pluginVersion"
        new File(resourcesDir, "ror-build-info.properties").text = contents
    }
}

task configureEsVersion() {
    doLast {
        if (project.hasProperty('esVersion')) {
            esVersion = project.properties['esVersion']
        }
    }
}

task rorproxy(type: Jar, dependsOn: [configureEsVersion, generateVersionsFile]) {
    manifest {
        attributes  'Implementation-Title': 'ReadonlyREST ES Proxy',
                    'Implementation-Version': project.properties['pluginVersion'],
                    'Main-Class': 'tech.beshu.ror.proxy.Boot'
    }
    baseName = pluginName + '-proxy'
    from { configurations.distJars.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}