variables:
  ssh_file: '~/.ssh/gh_deploy_key.priv'
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isDevelop: $[eq(variables['Build.SourceBranch'], 'refs/heads/develop')]
  isEpic: $[or(contains(variables['Build.SourceBranch'], 'epic/'), contains(variables['System.PullRequest.SourceBranch'], 'epic/'))]
  isPullRequest: $[eq(variables['Build.Reason'], 'PullRequest')]

trigger:
  batch: false
  branches:
    include:
      - master
      - develop
      - '*/epic/*'
      - RORDEV*
      - '*/pull/*'
  tags:
    exclude:
      - '*'
  paths:
    include:
      - '*'
    exclude:
      - 'docs/*'
      - '*.md'
      - '*/*/*.md'

parameters:
  - name: preBuildVersionsForPublishingToDockerHub
    type: string
    displayName: 'Space or comma-separated list of ES version numbers (e.g., "7.17.20 8.15.0")'
    default: ' '

pool:
  # we cannot simply bump it to 22.04, because there is a problem (probably) with s3-uploader.sh. Before the next bump
  # attempt, make sure that upload-files-to-s3.sh works.
  vmImage: 'ubuntu-20.04'

stages:

  - stage: TEST
    displayName: 'Run all tests'
    dependsOn: [ ]
    condition: and(succeeded(), ne(variables['Build.Reason'], 'Manual'))
    jobs:
      - job:
        condition: and(succeeded(), ne(variables.isEpic, true), ne(variables.isDevelop, true), ne(variables.isMaster, true))
        timeoutInMinutes: 120
        pool:
          vmImage: 'windows-2022'
        steps:
          - checkout: self
            fetchDepth: 1
            clean: false
            persistCredentials: true
          - task: JavaToolInstaller@0
            displayName: Switch to Java 21
            inputs:
              versionSpec: '21'
              jdkArchitectureOption: 'x64'
              jdkSourceOption: 'PreInstalled'
          - task: DockerInstaller@0
            displayName: Install Docker
            inputs:
              dockerVersion: 28.1.1
              releaseType: stable
          - powershell: |
                    docker ps
                    Write-Host ">>> $env:ES_MODULE => Running testcontainers.."
                    .\gradlew ror-tools:test "-PesModule=$env:ES_MODULE"
                    if ($LASTEXITCODE -ne 0) {
                      Get-ChildItem -Recurse -Filter *hs_err* | ForEach-Object {
                        Get-Content $_.FullName
                      }
                      exit 1
                    }
          - task: PublishTestResults@2
            condition: failed()
            inputs:
              testRunTitle: "$(Windows ES_MODULE) results"
              testResultsFiles: "**/TEST*xml"
              mergeTestResults: true
        strategy:
          maxParallel: 99
          matrix:
            IT_es90x:
              ES_MODULE: es90x