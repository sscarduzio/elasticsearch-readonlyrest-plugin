openapi: 3.0.3
info:
  title: ROR Internal API
  description: The API is designed for ROR KBN plugin. It should be treated as internal. It means that backward compatibility won't be a first-class thing for us.
  version: 3.0.0

paths:
  /_readonlyrest/metadata/current_user:
    get:
      summary: Getting logged user metadata from ES ROR
      description: Then endpoint is used by ROR Kibana to figure out if user can be authenticated and authorized. In response metadata of the user are sent back to Kibana.
      tags:
        - ROR Kibana logging in
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
        - $ref: '#/components/parameters/XRorCurrentGroupHeader'
      responses:
        200:
          description: Contains current user metadata or business error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCurrentUserMetadataResponse'
              examples:
                GetCurrentUserMetadataResponseExample:
                  $ref: "#/components/examples/GetCurrentUserMetadataResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/config:
    get:
      summary: Getting currently applied in-index Main Settings
      description: The endpoint can be used to fetch currently configured Main Settings. If Main settings are not configured, the endpoint returns proper status "empty" in the body.
      tags:
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains info about getting configured Main Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInIndexMainSettingsResponse'
              examples:
                MainSettingsAreConfiguredExample:
                  $ref: "#/components/examples/MainSettingsAreConfiguredExample"
                MainSettingsAreNotConfiguredExample:
                  $ref: "#/components/examples/MainSettingsAreNotConfiguredExample"
                MainSettingsCannotBeProvidedExample:
                  $ref: "#/components/examples/MainSettingsCannotBeProvidedExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
    post:
      summary: Configuring in-index Main Settings
      description: The endpoint can be used to configure Main Settings.
      tags:
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMainSettingsRequest'
      responses:
        200:
          description: Returns a status of updating Main Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateMainSettingsResponse'
              examples:
                UpdateMainSettingsSuccessResponse:
                  $ref: "#/components/examples/UpdateMainSettingsSuccessResponse"
                UpdateMainSettingsFailedResponse:
                  $ref: "#/components/examples/UpdateMainSettingsFailedResponse"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/config/file:
    get:
      summary: Getting file define Main Settings
      description: The endpoint can be used to fetch file defined Main Settings. The settings are not the currently used one if in-index settings are defined.
      tags:
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains info about getting Main Settings defined in file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFileMainSettingsResponse'
              examples:
                GetFileMainSettingsSuccessExample:
                  $ref: "#/components/examples/GetFileMainSettingsSuccessExample"
                GetFileMainSettingsFailureExample:
                  $ref: "#/components/examples/GetFileMainSettingsFailureExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/refreshconfig:
    post:
      summary: Force reloading in-index defined Main Settings
      description: The endpoint can be used to force reload ROR's in-index Main Settings.
      tags:
        - Main Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains info about getting configured Main Settings
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForceReloadInIndexMainSettingsResponse'
              examples:
                ForceReloadInIndexMainSettingsSuccessResponse:
                  $ref: "#/components/examples/ForceReloadInIndexMainSettingsSuccessResponse"
                ForceReloadInIndexMainSettingsFailedResponse:
                  $ref: "#/components/examples/ForceReloadInIndexMainSettingsFailedResponse"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/config/test:
    get:
      summary: Getting currently applied Test Settings
      description: The endpoint can be used to fetch currently configured Test settings. If Test settings are not configured, the endpoint returns proper error.
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains currently configured Test Settings or business error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTestSettingsResponse'
              examples:
                TestSettingsAreConfiguredAndValidResponseExample:
                  $ref: "#/components/examples/TestSettingsAreConfiguredAndValidResponseExample"
                TestSettingsAreConfiguredAndValidButWithWarningsResponseExample:
                  $ref: "#/components/examples/TestSettingsAreConfiguredAndValidButWithWarningsResponseExample"
                TestSettingsNotConfiguredResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredResponseExample"
                TestSettingsInvalidatedResponseExample:
                  $ref: "#/components/examples/TestSettingsInvalidatedResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
    post:
      summary: Configuring Test Settings
      description: The endpoint can be used to configure Test Settings.
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTestSettingsRequest'
      responses:
        200:
          description: Test Settings were configured or business error was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateTestSettingsResponse'
              examples:
                TestSettingsUpdatedResponseExample:
                  $ref: "#/components/examples/TestSettingsUpdatedResponseExample"
                TestSettingsUpdatedButWithWarningsResponseExample:
                  $ref: "#/components/examples/TestSettingsUpdatedButWithWarningsResponseExample"
                TestSettingsUpdateFailedResponseExample:
                  $ref: "#/components/examples/TestSettingsUpdateFailedResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
    delete:
      summary: Invalidating Test Settings
      description: The endpoint can be used to invalidate Test Settings early
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains confirmation of Test Settings invalidation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidateTestSettingsResponse'
              examples:
                InvalidateTestSettingsSuccessResponseExample:
                  $ref: "#/components/examples/InvalidateTestSettingsSuccessResponseExample"
                InvalidateTestSettingsFailedResponseExample:
                  $ref: "#/components/examples/InvalidateTestSettingsFailedResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/config/test/localusers:
    get:
      summary: Getting list of local users
      description: The endpoint can be used to fetch local users' names defined in currently configured Test settings. If Test settings are not configured, the endpoint returns proper error.
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains local users or business error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLocalUsersFromTestSettingsResponse'
              examples:
                GetLocalUsersFromTestSettingsResponseExample:
                  $ref: "#/components/examples/GetLocalUsersFromTestSettingsResponseExample"
                TestSettingsNotConfiguredResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
  /_readonlyrest/admin/config/test/authmock:
    get:
      summary: Getting currently configured Auth Services mocks
      description: The endpoint can be used to fetch mocks for Auth Services defined in ReadonlyREST's Tests settings. If Test settings are not configured, the endpoint returns proper error.
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      responses:
        200:
          description: Contains authentication services mocks definitions or business error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAuthMocksResponse'
              examples:
                AllTypesOfAuthServicesConfiguredResponseExample:
                  $ref: "#/components/examples/AllTypesOfAuthServicesConfiguredResponseExample"
                NoAuthServiceConfiguredResponseExample:
                  $ref: "#/components/examples/NoAuthServiceConfiguredResponseExample"
                OnlySomeAuthServicesConfiguredResponseExample:
                  $ref: "#/components/examples/OnlySomeAuthServicesConfiguredResponseExample"
                TestSettingsNotConfiguredAuthServicesResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredAuthServicesResponseExample"
                TestSettingsInvalidatedAuthServicesResponseExample:
                  $ref: "#/components/examples/TestSettingsInvalidatedAuthServicesResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"
    post:
      summary: Configuring Auth Services mocks
      description: The endpoint can be used to update mocks for Auth Services defined in ReadonlyREST's Tests settings. If Test settings are not configured, the endpoint returns proper error.
      tags:
        - Test Settings
      parameters:
        - $ref: '#/components/parameters/XRorCorrelationIdHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthMockRequest'
            examples:
              AllTypesOfAuthServicesConfiguredResponseExample:
                $ref: "#/components/examples/AllTypesOfAuthServicesConfiguredRequestExample"
              NoAuthServiceConfiguredResponseExample:
                $ref: "#/components/examples/NoAuthServiceConfiguredRequestExample"
              OnlySomeAuthServicesConfiguredResponseExample:
                $ref: "#/components/examples/OnlySomeAuthServicesConfiguredRequestExample"
      responses:
        200:
          description: Auth Services Mocks were configured or business error was returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAuthMocksResponse'
              examples:
                AuthMocksUpdatedResponseExample:
                  $ref: "#/components/examples/AuthMocksUpdatedResponseExample"
                TestSettingsNotConfiguredAuthServicesResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredAuthServicesResponseExample"
                TestSettingsInvalidatedAuthServicesResponseExample:
                  $ref: "#/components/examples/TestSettingsInvalidatedAuthServicesResponseExample"
                UnknownAuthServicesDetectedResponseExample:
                  $ref: "#/components/examples/UnknownAuthServicesDetectedResponseExample"
                AuthMocksUpdateFailedResponseExample:
                  $ref: "#/components/examples/AuthMocksUpdateFailedResponseExample"
        403:
          description: The request was forbidden by ROR's ACL
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenRorResponse'
              examples:
                NoAclBlockWasMatchedForbiddenResponseExample:
                  $ref: "#/components/examples/NoAclBlockWasMatchedForbiddenResponseExample"
                ForbidBlockMatchedResponseExample:
                  $ref: "#/components/examples/ForbidBlockMatchedResponseExample"
                TestSettingsNotConfiguredForbiddenResponseExample:
                  $ref: "#/components/examples/TestSettingsNotConfiguredForbiddenResponseExample"
                ImpersonationNotSupportedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotSupportedResponseExample"
                ImpersonationNotAllowedResponseExample:
                  $ref: "#/components/examples/ImpersonationNotAllowedResponseExample"
                RorIsNotStartedYetResponseExample:
                  $ref: "#/components/examples/RorIsNotStartedYetResponseExample"
                RorFailedToStartResponseExample:
                  $ref: "#/components/examples/RorFailedToStartResponseExample"

components:
  securitySchemes:
    http:
      type: http
      scheme: basic

  schemas:
    ForbiddenRorResponse:
      type: object
      required:
        - error
        - status
      properties:
        error:
          type: object
          required:
            - type
            - reason
            - due_to
          properties:
            type:
              type: string
              enum:
                - forbidden_response
            reason:
              type: string
              enum:
                - forbidden
            due_to:
              type: array
              description: |
                It's an array of causes why ROR's ACL forbade the request. 
                WARNING: Please notice, that one element array ES used to print as a string!!!
              items:
                type: string
                enum:
                  - OPERATION_NOT_ALLOWED
                  - FORBIDDEN_BY_BLOCK
                  - TEST_SETTINGS_NOT_CONFIGURED
                  - IMPERSONATION_NOT_SUPPORTED
                  - IMPERSONATION_NOT_ALLOWED
                  - READONLYREST_NOT_READY_YET
                  - READONLYREST_NOT_ENABLED
                  - READONLYREST_FAILED_TO_START
        status:
          type: number
          example: 403

    XRorCorrelationId:
      type: string
      description: "Correlation ID to correlate requests/responses logs within one ROR KBN session"
      example: "CED054A0-9881-401E-AEED-4FB4C5915DD6"

    GetCurrentUserMetadataResponse:
      type: object
      properties:
        x-ror-correlation-id:
          type: string
          description: the correlation ID sent in request header
        x-ror-username:
          type: string
          description: the logged username
        x-ror-available-groups:
          type: array
          description: all of the user's groups
          items:
            $ref: '#/components/schemas/Group'
        x-ror-current-group:
          description: the user's group that will be selected in tenancy selector
          allOf:
            - $ref: '#/components/schemas/Group'
        x-ror-kibana_access:
          type: string
          description: defines the minimum set of actions necessary for browsers to use Kibana.
          enum:
            - admin
            - api_only
            - ro
            - ro_strict
            - rw
            - unrestricted
        x-ror-kibana_index:
          type: string
          description: the user's Kibana index name
        x-ror-kibana_template_index:
          type: string
          description: the user's Kibana template index name
        x-ror-kibana-hidden-apps:
          type: array
          description: it defines which Kibana apps should be hidden by ROR Kibana (it supports regexes)
          items:
            $ref: '#/components/schemas/KibanaHiddenAppLike'
        x-ror-kibana-allowed-api-paths:
          type: array
          description: it defines which Kibana API paths should be allowed by ROR Kibana (it supports regexes)
          items:
            $ref: '#/components/schemas/KibanaAllowedApiPath'
        x-ror-origin:
          type: string
          description: the value taken from JWT's x-ror-origin claim when 'ror_kbn_auth' rule is matched
        x-ror-kibana-metadata:
          type: object
          description: json with metadata ([key, value] pairs) from the matched block

    GroupId:
      type: string
      description: It's a group ID that the user belongs to

    Group:
      type: object
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/GroupId'
        name:
          type: string
          description: It's a human-readable group name used in tenancy selector in ROR Kibana

    KibanaAllowedApiPath:
      type: object
      required:
        - http_method
        - path_regex
      properties:
        http_method:
          type: string
          enum:
            - ANY
            - GET
            - PUT
            - POST
            - DELETE
          description: HTTP method can be set to specific one (GET, PUT, POST, DELETE) or be ANY
        path_regex:
          type: string
          description: It's a Java 8 regex (https://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html) for Kibana API path (it can include query string and fragments too)

    KibanaHiddenAppLike:
      oneOf:
        - $ref: '#/components/schemas/KibanaHiddenAppName'
        - $ref: '#/components/schemas/KibanaHiddenAppPattern'

    KibanaHiddenAppName:
      type: string
      description: It's a Kibana app name

    KibanaHiddenAppPattern:
      type: string
      description: It's a Kibana app name regex pattern

    GetInIndexMainSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/CurrentMainSettingsResponse'
        - $ref: '#/components/schemas/MainSettingsNotConfiguredResponse'
        - $ref: '#/components/schemas/MainSettingsCannotBeProvidedResponse'
      discriminator:
        propertyName: status
        mapping:
          ok: '#/components/schemas/CurrentMainSettingsResponse'
          empty: '#/components/schemas/MainSettingsNotConfiguredResponse'
          ko: '#/components/schemas/MainSettingsCannotBeProvidedResponse'

    CurrentMainSettingsResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: "Success status"
          enum:
            - ok
        message:
          type: string
          description: ROR main settings YAML

    MainSettingsNotConfiguredResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: "No Main Settings status"
          enum:
            - empty
        message:
          type: string
          description: Human readable message

    MainSettingsCannotBeProvidedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: "Failed status"
          enum:
            - ko
        message:
          type: string
          description: Human readable message

    UpdateMainSettingsRequest:
      type: object
      required:
        - settings
      properties:
        settings:
          type: string
          description: "ROR main settings YAML"
          example: |
            readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""

    UpdateMainSettingsResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Update Main Settings status
          enum:
            - ok
            - ko
        message:
          type: string
          description: Human readable message

    GetFileMainSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/GetFileMainSettingsSuccessResponse'
        - $ref: '#/components/schemas/GetFileMainSettingsFailureResponse'
      discriminator:
        propertyName: status
        mapping:
          ok: '#/components/schemas/GetFileMainSettingsSuccessResponse'
          ko: '#/components/schemas/GetFileMainSettingsFailureResponse'

    GetFileMainSettingsSuccessResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: "Success status"
          enum:
            - ok
        message:
          type: string
          description: ROR main settings YAML

    GetFileMainSettingsFailureResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: "Failed status"
          enum:
            - ko
        message:
          type: string
          description: Human readable message

    ForceReloadInIndexMainSettingsResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          description: Force reload in-index Main Settings status
          enum:
            - ok
            - ko
        message:
          type: string
          description: Human readable message

    GetTestSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/CurrentTestSettingsResponse'
        - $ref: '#/components/schemas/TestSettingsNotConfiguredResponse'
        - $ref: '#/components/schemas/TestSettingsInvalidatedResponse'
      discriminator:
        propertyName: status
        mapping:
          TEST_SETTINGS_PRESENT: '#/components/schemas/CurrentTestSettingsResponse'
          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/TestSettingsNotConfiguredResponse'
          TEST_SETTINGS_INVALIDATED: '#/components/schemas/TestSettingsInvalidatedResponse'

    TestSettingsNotConfiguredResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_NOT_CONFIGURED
        message:
          type: string
          description: Human readable message

    TestSettingsInvalidatedResponse:
      type: object
      required:
        - status
        - message
        - settings
        - ttl
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_INVALIDATED
        message:
          type: string
          description: Human readable message
        settings:
          type: string
          description: Recently configured Test Settings that are not longer valid, because they were invalidated
        ttl:
          $ref: '#/components/schemas/RorSettingsTtl'

    CurrentTestSettingsResponse:
      type: object
      required:
        - status
        - ttl
        - valid_to
        - settings
        - warnings
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_PRESENT
        ttl:
          $ref: '#/components/schemas/RorSettingsTtl'
        valid_to:
          type: string
          format: date-time
          description: "It says how long the Test Settings will be valid. After that date, the Settings will be invalidated"
          example: "2022-01-12T07:20:50.52Z"
        settings:
          $ref: '#/components/schemas/RorSettings'
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/TestSettingsImpersonationWarnings'

    RorSettingsTtl:
      type: string
      description: "Configured ROR Settings Time To Live value. After this time the Test Setting will be automatically invalidated. Available units: d, day, h, hr, hour m, min, minute s, sec, second"
      example: 30 m

    TestSettingsImpersonationWarnings:
      description: "It warns about problems with impersonation in given block"
      type: object
      required:
        - block_name
        - rule_name
        - message
        - hint
      properties:
        block_name:
          type: string
          description: Block name in ROR's ACL
        rule_name:
          type: string
          description: Rule name in the block
        message:
          type: string
          description: It's human readable message with the fact what's wrong with that block and rule
        hint:
          type: string
          description: It's human readable message about possible solution of the problem

    UpdateTestSettingsRequest:
      type: object
      required:
        - ttl
        - settings
      properties:
        ttl:
          $ref: '#/components/schemas/RorSettingsTtl'
        settings:
          $ref: '#/components/schemas/RorSettings'

    UpdateTestSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/UpdateTestSettingsSuccessResponse'
        - $ref: '#/components/schemas/UpdateTestSettingsFailedResponse'
      discriminator:
        propertyName: status
        mapping:
          OK: '#/components/schemas/UpdateTestSettingsSuccessResponse'
          FAILED: '#/components/schemas/UpdateTestSettingsFailedResponse'

    UpdateTestSettingsSuccessResponse:
      type: object
      required:
        - status
        - message
        - valid_to
        - warnings
      properties:
        status:
          type: string
          enum:
            - OK
        message:
          type: string
          description: Human readable message
        valid_to:
          type: string
          format: date-time
          description: "It says how long the Test Settings will be valid. After that date, the Settings will be invalidated"
          example: "2022-01-12T07:20:50.52Z"
        warnings:
          type: array
          items:
            $ref: '#/components/schemas/TestSettingsImpersonationWarnings'

    UpdateTestSettingsFailedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - FAILED
        message:
          type: string
          description: Human readable message (cause)

    InvalidateTestSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/InvalidateTestSettingsSuccessResponse'
        - $ref: '#/components/schemas/InvalidateTestSettingsFailedResponse'
      discriminator:
        propertyName: status
        mapping:
          OK: '#/components/schemas/InvalidateTestSettingsSuccessResponse'
          FAILED: '#/components/schemas/InvalidateTestSettingsFailedResponse'

    InvalidateTestSettingsSuccessResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - OK
        message:
          type: string
          description: Human readable message (cause)

    InvalidateTestSettingsFailedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - FAILED
        message:
          type: string
          description: Human readable message (cause)

    GetLocalUsersFromTestSettingsResponse:
      oneOf:
        - $ref: '#/components/schemas/GetLocalUsersFromPresentTestSettingsResponse'
        - $ref: '#/components/schemas/TestSettingsNotConfiguredResponse'
      discriminator:
        propertyName: status
        mapping:
          OK: '#/components/schemas/GetLocalUsersFromPresentTestSettingsResponse'
          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/TestSettingsNotConfiguredResponse'

    GetLocalUsersFromPresentTestSettingsResponse:
      type: object
      required:
        - status
        - users
      properties:
        status:
          type: string
          enum:
            - OK
        users:
          type: array
          description: It contains a list of locally (in ROR Settings) defined usernames.
          items:
            $ref: '#/components/schemas/LocalUserName'
        unknown_users:
          type: boolean
          description: It is 'true' when some usernames cannot be returned but they are defined (the users names cannot be resolved or exposed)

    LocalUserName:
      type: string
      description: Local user name
      example: John Doe

    GetAuthMocksResponse:
      oneOf:
        - $ref: '#/components/schemas/CurrentAuthMocksResponse'
        - $ref: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'
        - $ref: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'
      discriminator:
        propertyName: status
        mapping:
          TEST_SETTINGS_PRESENT: '#/components/schemas/CurrentAuthMocksResponse'
          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'
          TEST_SETTINGS_INVALIDATED: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'

    CurrentAuthMocksResponse:
      type: object
      required:
        - status
        - services
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_PRESENT
        services:
          type: array
          items:
            $ref: '#/components/schemas/AuthMockService'

    AuthMockTestSettingsNotConfiguredResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_NOT_CONFIGURED
        message:
          type: string
          description: Human readable message

    AuthMockTestSettingsInvalidatedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - TEST_SETTINGS_INVALIDATED
        message:
          type: string
          description: Human readable message

    AuthMockUpdateFailedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - FAILED
        message:
          type: string
          description: Human readable message

    UnknownAuthServicesDetectedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - UNKNOWN_AUTH_SERVICES_DETECTED
        message:
          type: string
          description: Human readable message

    UpdateAuthMockRequest:
      type: object
      required:
        - services
      properties:
        services:
          type: array
          items:
            $ref: '#/components/schemas/AuthMockService'

    UpdateAuthMocksResponse:
      oneOf:
        - $ref: '#/components/schemas/AuthMocksUpdatedResponse'
        - $ref: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'
        - $ref: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'
        - $ref: '#/components/schemas/UnknownAuthServicesDetectedResponse'
        - $ref: '#/components/schemas/AuthMockUpdateFailedResponse'
      discriminator:
        propertyName: status
        mapping:
          OK: '#/components/schemas/AuthMocksUpdatedResponse'
          TEST_SETTINGS_NOT_CONFIGURED: '#/components/schemas/AuthMockTestSettingsNotConfiguredResponse'
          TEST_SETTINGS_INVALIDATED: '#/components/schemas/AuthMockTestSettingsInvalidatedResponse'
          UNKNOWN_AUTH_SERVICES_DETECTED: '#/components/schemas/UnknownAuthServicesDetectedResponse'
          FAILED: '#/components/schemas/AuthMockUpdateFailedResponse'

    AuthMocksUpdatedResponse:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: string
          enum:
            - OK
        message:
          type: string
          description: Human readable message

    AuthMockService:
      oneOf:
        - $ref: '#/components/schemas/LdapAuthorizationService'
        - $ref: '#/components/schemas/ExternalAuthenticationService'
        - $ref: '#/components/schemas/ExternalAuthorizationService'
      discriminator:
        propertyName: type
        mapping:
          LDAP: '#/components/schemas/LdapAuthorizationService'
          EXT_AUTHN: '#/components/schemas/ExternalAuthenticationService'
          EXT_AUTHZ: '#/components/schemas/ExternalAuthorizationService'

    LdapAuthorizationService:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          enum:
            - LDAP
        name:
          type: string
          description: Name of the LDAP connector defined in ReadonlyREST settings
          example: "LDAP 1"
        mock:
          oneOf:
            - $ref: '#/components/schemas/LdapAuthorizationServiceMock'
            - $ref: '#/components/schemas/MockServiceNotConfigured'

    LdapAuthorizationServiceMock:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          description: The mock defines LDAP user and their roles (groups).
          items:
            $ref: '#/components/schemas/MockServiceUserAndGroups'

    ExternalAuthenticationService:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          enum:
            - EXT_AUTHN
        name:
          type: string
          description: Name of the External Authentication Service defined in ReadonlyREST settings
          example: "Ext AuthN Service 1"
        mock:
          oneOf:
            - $ref: '#/components/schemas/ExternalAuthenticationServiceMock'
            - $ref: '#/components/schemas/MockServiceNotConfigured'

    ExternalAuthenticationServiceMock:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          description: The mock defines External Authentication users.
          items:
            $ref: '#/components/schemas/MockServiceUsers'

    ExternalAuthorizationService:
      type: object
      required:
        - type
        - name
      properties:
        type:
          type: string
          enum:
            - LDAP
        name:
          type: string
          description: Name of the LDAP connector defined in ReadonlyREST settings
          example: "LDAP 1"
        mock:
          oneOf:
            - $ref: '#/components/schemas/ExternalAuthorizationServiceMock'
            - $ref: '#/components/schemas/MockServiceNotConfigured'

    ExternalAuthorizationServiceMock:
      type: object
      required:
        - users
      properties:
        users:
          type: array
          description: The mock defines External Grops Provider roles (groups) per user.
          items:
            $ref: '#/components/schemas/MockServiceUserAndGroups'

    MockServiceUserAndGroups:
      type: object
      description: It describes users and thier groups. Any of these users can be authenticated. The groups related to the authenticated user will be returned during authorization.
      required:
        - name
        - groups
      properties:
        name:
          $ref: '#/components/schemas/MockServiceUserName'
        groups:
          type: array
          description: Groups that the user belongs to
          items:
            $ref: '#/components/schemas/MockServiceUserGroup'

    MockServiceUsers:
      type: object
      description: It describes users. Any of these users can be authenticated.
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/MockServiceUserName'

    MockServiceUserName:
      type: string
      description: Username returned by mocked Service
      example: John Doe

    MockServiceUserGroup:
      type: object
      description: User's group returned by mocked Service
      required:
        - id
      properties:
        id:
          type: string
          description: It's a group ID that the user belongs to
        name:
          type: string
          description: It's a human-readable group name used in the tenancy selector in ROR Kibana. If not defined, the group ID is used as the group name
      example:
        - id: DeveloperGroup
          name: Developer
        - id: ManagerGroup
          name: Manager

    MockServiceNotConfigured:
      type: string
      enum:
        - NOT_CONFIGURED
      description: It means that given Service's mock has not been configured yet

    RorSettings:
      type: string
      description: ROR Settings escaped YAML
      example: |
        readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""

  parameters:
    XRorCorrelationIdHeader:
      name: X-ROR-Correlation-ID
      in: header
      required: false
      description: ID to correlate requests/reponses logs within one ROR KBN session
      schema:
        $ref: '#/components/schemas/XRorCorrelationId'

    XRorCurrentGroupHeader:
      name: X-ROR-Current-Group
      in: header
      required: false
      description: The selected user's group ID in the tenancy selector
      schema:
        $ref: '#/components/schemas/GroupId'

  examples:

    GetCurrentUserMetadataResponseExample:
      summary: Logged user metadata
      value:
        x-ror-correlation-id: 7D2695DF-C2CC-419A-9D0D-8A309D429786
        x-ror-username: admin
        x-ror-current-group:
          id: administration_group
          name: administration
        x-ror-available-groups:
          - id: administration_group
            name: administration
          - id: management_group
            name: management
          - id: users_group
            name: users
        x-ror-kibana_index: .kibana_7.17_admin
        x-ror-kibana_access: admin
        x-ror-kibana-allowed-api-paths:
          - http_method: ANY
            path_regex: "^/api/index_management/indices$"
          - http_method: ANY
            path_regex: >-
              ^\/api\/spaces\/.*$
          - http_method: GET
            path_regex: "^/api/saved_objects/.*$"
        x-ror-kibana-metadata:
          key1: string
          key2: 1
          key3: true
          key4: ["ab", "cd"]
          key5:
            a: 1
            b: 2

    NoAclBlockWasMatchedForbiddenResponseExample:
      summary: No ACL block was matched
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - OPERATION_NOT_ALLOWED
        status: 403

    ForbidBlockMatchedResponseExample:
      summary: Request was forbidden by matching a block with "forbid" type
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - FORBIDDEN_BY_BLOCK
        status: 403

    TestSettingsNotConfiguredForbiddenResponseExample:
      summary: Request was forbidden because impersonation feature is disbaled when Test Settings are not configured
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - TEST_SETTINGS_NOT_CONFIGURED
        status: 403

    ImpersonationNotSupportedResponseExample:
      summary: No block was matched and at least one block has rule which doesn't support impersonation
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - OPERATION_NOT_ALLOWED
            - IMPERSONATION_NOT_SUPPORTED
        status: 403

    ImpersonationNotAllowedResponseExample:
      summary: User has no impersonation permissions
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - OPERATION_NOT_ALLOWED
            - IMPERSONATION_NOT_ALLOWED
        status: 403

    RorIsNotStartedYetResponseExample:
      summary: ROR was not started yet
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - READONLYREST_NOT_READY_YET
        status: 403

    RorFailedToStartResponseExample:
      summary: ROR failed to start
      value:
        error:
          type: forbidden_response
          reason: forbidden
          due_to:
            - READONLYREST_FAILED_TO_START
        status: 403

    MainSettingsAreConfiguredExample:
      summary: Main settings are configured
      value:
        status: ok
        message: |
          readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""

    MainSettingsAreNotConfiguredExample:
      summary: Main setting are NOT configured
      value:
        status: empty
        message: "Cannot find settings index"

    MainSettingsCannotBeProvidedExample:
      summary: Main setting failed to get
      value:
        status: ko
        message: "Settings content is malformed"

    UpdateMainSettingsSuccessResponse:
      summary: Main settings updated with success
      value:
        status: ok
        message: "updated settings"

    UpdateMainSettingsFailedResponse:
      summary: Main settings update failed
      value:
        status: ko
        message: "Cannot save new settings"

    GetFileMainSettingsSuccessExample:
      summary: Successfully fetched file defined Main settings
      value:
        status: ok
        message: |
          readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""

    GetFileMainSettingsFailureExample:
      summary: Cannot get file defined Main Settings
      value:
        status: ko
        message: "Settings content is malformed"

    ForceReloadInIndexMainSettingsSuccessResponse:
      summary: Successfully reloaded in-index Main Settings
      value:
        status: ok
        message: "ReadonlyREST settings were reloaded with success!"

    ForceReloadInIndexMainSettingsFailedResponse:
      summary: Cannot reload in-index Main Settings
      value:
        status: ko
        message: "Current settings are already loaded"

    TestSettingsAreConfiguredAndValidResponseExample:
      summary: Test settings are configured and valid (no warnings)
      value:
        status: TEST_SETTINGS_PRESENT
        ttl: 30 m
        valid_to: "2022-01-12T07:20:50.52Z"
        settings: |
          readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""
        warnings: []

    TestSettingsAreConfiguredAndValidButWithWarningsResponseExample:
      summary: Test settings are configured and valid (with warnings)
      value:
        status: TEST_SETTINGS_PRESENT
        ttl: 30 m
        valid_to: "2022-01-12T07:20:50.52Z"
        settings: |
          readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key_sha1: \\""d27aaf7fa3c1603948bb29b7339f2559dc02019a\\""
        warnings:
          - block_name: other
            rule_name: auth_key_sha1
            message: "The rule contains fully hashed username and password. It doesn't support impersonation in this configuration"
            hint: "You can use second version of the rule and use not hashed username. Like that: `auth_key_sha1: USER_NAME:hash(PASSWORD)"

    TestSettingsNotConfiguredResponseExample:
      summary: ROR Test settings are not configured yet
      value:
        status: TEST_SETTINGS_NOT_CONFIGURED
        message: ROR Test settings are not configured

    TestSettingsInvalidatedResponseExample:
      summary: ROR Test settings are invalidated
      value:
        status: TEST_SETTINGS_INVALIDATED
        message: ROR Test settings are invalidated
        recent_settings: |
          readonlyrest:\\r\\n    access_control_rules:\\r\\n\\r\\n    - name: | \\""Require HTTP Basic | Auth\\""\\r\\n      type: allow\\r\\n      indices: | [\\""test\\""]\\r\\n\\r\\n    - name: | \\""other\\""\\r\\n      auth_key: \\""admin:test\\""
        ttl: 30 m

    TestSettingsUpdatedResponseExample:
      summary: ROR Test settings was updated and configured with success (no warnings)
      value:
        status: OK
        message: updated settings
        valid_to: "2022-01-12T07:20:50.52Z"
        warnings: []

    TestSettingsUpdatedButWithWarningsResponseExample:
      summary: ROR Test settings was updated and configured with success (with warnings)
      value:
        status: OK
        message: updated settings
        valid_to: "2022-01-12T07:20:50.52Z"
        warnings:
          - block_name: other
            rule_name: auth_key_sha1
            message: "The rule contains fully hashed username and password. It doesn't support impersonation in this configuration"
            hint: "You can use second version of the rule and use not hashed username. Like that: `auth_key_sha1: USER_NAME:hash(PASSWORD)"

    TestSettingsUpdateFailedResponseExample:
      summary: ROR Test settings update failed
      value:
        status: FAILED
        message: Current settings are already loaded

    InvalidateTestSettingsSuccessResponseExample:
      summary: ROR Test settings were invalidated
      value:
        status: OK
        message: test settings invalidated

    InvalidateTestSettingsFailedResponseExample:
      summary: ROR Test settings invalidation failed
      value:
        status: FAILED
        message: cannot invalidate test settings

    GetLocalUsersFromTestSettingsResponseExample:
      summary: Local users list response
      value:
        status: OK
        users:
          - john
          - tom
          - mark
        unknown_users: false

    AllTypesOfAuthServicesConfiguredResponseExample:
      summary: Three types of currently mockable Auth Services are configured
      value:
        status: TEST_SETTINGS_PRESENT
        services:
          - type: LDAP
            name: LDAP 1
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DeveloperGroup
                      name: Developer
                    - id: DevOpsGroup
                      name: DevOps
                - name: RobertSmith
                  groups:
                    - id: ManagerGroup
                      name: Manager
          - type: LDAP
            name: LDAP 2
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DevOpsGroup
                      name: DevOps
                - name: JudyBrown
                  groups:
                    - id: CustomerGroup
                      name: Customer
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock:
              users:
                - name: JaimeRhynes
                - name: MichaelDavis
                - name: Johny
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock:
              users:
                - name: JaimeRhynes
                  groups:
                    - id: CustomerGroup
                      name: Customer
                - name: Martian
                  groups:
                    - id: VisitorGroup
                      name: Visitor

    AllTypesOfAuthServicesConfiguredRequestExample:
      summary: Three types of currently mockable Auth Services are configured
      value:
        services:
          - type: LDAP
            name: LDAP 1
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DeveloperGroup
                      name: Developer
                    - id: DevOpsGroup
                      name: DevOps
                - name: RobertSmith
                  groups:
                    - id: ManagerGroup
                      name: Manager
          - type: LDAP
            name: LDAP 2
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DevOpsGroup
                      name: DevOps
                - name: JudyBrown
                  groups:
                    - id: CustomerGroup
                      name: Customer
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock:
              users:
                - name: JaimeRhynes
                - name: MichaelDavis
                - name: Johny
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock:
              users:
                - name: JaimeRhynes
                  groups:
                    - id: CustomerGroup
                      name: Customer
                - name: Martian
                  groups:
                    - id: VisitorGroup
                      name: Visitor

    NoAuthServiceConfiguredResponseExample:
      summary: Three types of currently mockable Auth Services are not configured yet
      value:
        status: TEST_SETTINGS_PRESENT
        services:
          - type: LDAP
            name: LDAP 1
            mock: NOT_CONFIGURED
          - type: LDAP
            name: LDAP 2
            mock: NOT_CONFIGURED
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock: NOT_CONFIGURED
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock: NOT_CONFIGURED

    NoAuthServiceConfiguredRequestExample:
      summary: Three types of currently mockable Auth Services are not configured yet
      value:
        services:
          - type: LDAP
            name: LDAP 1
            mock: NOT_CONFIGURED
          - type: LDAP
            name: LDAP 2
            mock: NOT_CONFIGURED
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock: NOT_CONFIGURED
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock: NOT_CONFIGURED

    OnlySomeAuthServicesConfiguredResponseExample:
      summary: Some of currently mockable Auth Services are configured
      value:
        status: TEST_SETTINGS_PRESENT
        services:
          - type: LDAP
            name: LDAP 1
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DeveloperGroup
                      name: Developer
                    - id: DevOpsGroup
                      name: DevOps
                - name: RobertSmith
                  groups:
                    - id: ManagerGroup
                      name: Manager
          - type: LDAP
            name: LDAP 2
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DevOpsGroup
                      name: DevOps
                - name: JudyBrown
                  groups:
                    - id: CustomerGroup
                      name: Customer
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock: NOT_CONFIGURED
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock: NOT_CONFIGURED

    OnlySomeAuthServicesConfiguredRequestExample:
      summary: Some of currently mockable Auth Services are configured
      value:
        services:
          - type: LDAP
            name: LDAP 1
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DeveloperGroup
                      name: Developer
                    - id: DevOpsGroup
                      name: DevOps
                - name: RobertSmith
                  groups:
                    - id: ManagerGroup
                      name: Manager
          - type: LDAP
            name: LDAP 2
            mock:
              users:
                - name: JohnDoe
                  groups:
                    - id: DevOpsGroup
                      name: DevOps
                - name: JudyBrown
                  groups:
                    - id: CustomerGroup
                      name: Customer
          - type: EXT_AUTHN
            name: ACME1 External Authentication Service
            mock: NOT_CONFIGURED
          - type: EXT_AUTHZ
            name: ACME2 External Authorization Service
            mock: NOT_CONFIGURED

    TestSettingsNotConfiguredAuthServicesResponseExample:
      summary: ROR Test settings are not configured
      value:
        status: TEST_SETTINGS_NOT_CONFIGURED
        message: ROR Test settings are not configured. To use Auth Services Mock ROR has to have Test settings active.

    TestSettingsInvalidatedAuthServicesResponseExample:
      summary: ROR Test settings are invalidated
      value:
        status: TEST_SETTINGS_INVALIDATED
        message: ROR Test settings are invalidated. To use Auth Services Mock ROR has to have Test settings active.

    UnknownAuthServicesDetectedResponseExample:
      summary: Unknown Auth Services detected
      value:
        status: UNKNOWN_AUTH_SERVICES_DETECTED
        message: ROR doesn't allow to configure unknown Auth Services. Only the ones used in ROR's Test settings can be configured.

    AuthMocksUpdateFailedResponseExample:
      summary: Auth Services mocks update has failed
      value:
        status: FAILED
        message: 'Cannot save auth services mocks: Cannot save settings in index'

    AuthMocksUpdatedResponseExample:
      summary: Auth Services mocks were updated
      value:
        status: OK
        message: Auth Services mocks were updated

security:
  - http: []
