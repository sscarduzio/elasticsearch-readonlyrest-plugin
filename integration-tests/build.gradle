plugins {
    id "readonlyrest.base-common-conventions"

    id "com.github.maiflai.scalatest"    version "0.32"
}

repositories {
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://artifacts.elastic.co/maven' }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

configurations {
    scalaCompilerPlugin {
        transitive = false
    }
}

tasks.withType(ScalaCompile).configureEach {
    // Map plugin jars to -Xplugin parameter
    List<String> parameters =
            configurations.scalaCompilerPlugin.files.collect {
                '-Xplugin:' + it.absolutePath
            }

    // Add whatever flags you typically add
    parameters += [
            "-feature",
            "-Xfatal-warnings",
            "-Wunused:implicits",
            "-Wunused:imports",
            "-Wunused:explicits",
            "-Wunused:strict-no-implicit-warn",
            "-Wunused:locals",
            "-Wunused:params",
            "-Wunused:privates",
            "-Wunused:nowarn",
    ]

    // Finally set the additionalParameters
    scalaCompileOptions.additionalParameters = parameters
}

test {
    systemProperty "project.dir", rootProject.projectDir
    enabled = project.hasProperty('esModule')
    if (enabled) {
        def module = project.properties['esModule']
        systemProperty "esModule", module

        tags {
            exclude 'tech.beshu.tags.ExcludeESModule.' + module
        }

        suite 'tech.beshu.ror.integration.suites.*'
    }
    outputs.upToDateWhen { false }
    maxParallelForks = 1
}

dependencies {
    testImplementation project(':tests-utils')

    testImplementation  group: 'jakarta.xml.bind',              name: 'jakarta.xml.bind-api',       version: '2.3.2'
    testImplementation  group: 'org.glassfish.jaxb',            name: 'jaxb-runtime',               version: '2.3.2'
    testImplementation  group: 'ch.qos.logback',                name: 'logback-classic',            version: '1.3.14'
    testRuntimeOnly     group: 'org.pegdown',                   name: 'pegdown',                    version: '1.4.2'
    testImplementation  group: 'org.scala-lang',                name: 'scala3-library_3',           version: '3.3.3'
    testImplementation  group: 'org.scalatest',                 name: 'scalatest_3',                version: '3.2.18'
}

tasks.register('ldapserver', JavaExec) {
    systemProperties = System.properties
    mainClass.set('tech.beshu.ror.integration.LDAPServer')
    classpath = sourceSets.test.runtimeClasspath
}
