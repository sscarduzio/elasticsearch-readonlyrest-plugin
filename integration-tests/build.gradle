buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = 2
    }
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'license'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://artifacts.elastic.co/maven' }
}

test {
    systemProperty "project.dir", rootProject.projectDir
    enabled = project.hasProperty('esModule')
    if (enabled) {
        def module = project.properties['esModule']
        systemProperty "esModule", module
    }
    outputs.upToDateWhen { false }

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

dependencies {
    compile group: 'org.scala-lang',                    name: 'scala-library',              version: '2.12.4'

    testCompile project(':tests-utils')
    testCompile group: 'ch.qos.logback',                name: 'logback-classic',            version: '1.2.3'
    testCompile group: 'ch.qos.logback',                name: 'logback-core',               version: '1.2.3'
    testCompile group: 'com.jayway.jsonpath',           name: 'json-path',                  version: '2.2.0'
    testCompile group: 'com.mashape.unirest',           name: 'unirest-java',               version: '1.4.9'
    testCompile group: 'io.jsonwebtoken',               name: 'jjwt',                       version: '0.9.1'

}

license {
    header rootProject.file('ReadonlyRESTLicenseHeader.txt')
    skipExistingHeaders true
    useDefaultMappings = false
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

task ldapserver(type:JavaExec) {
   systemProperties = System.properties
   main = 'tech.beshu.ror.integration.LDAPServer'
   classpath = sourceSets.test.runtimeClasspath
}
