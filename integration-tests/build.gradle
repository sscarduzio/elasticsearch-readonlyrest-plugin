group = 'org.elasticsearch.plugin'
version = pluginVersion

buildscript {
    ext {
        pluginVersion = rootProject.properties['pluginVersion']
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

subprojects {
    tasks.withType(Test) {
        maxParallelForks = 2
    }
}

apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'license'

repositories {
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://jitpack.io' }
    maven { url 'https://artifacts.elastic.co/maven' }
}

test {
    systemProperty "project.dir", rootProject.projectDir
    enabled = project.hasProperty('esModule')
    if (enabled) {
        def module = project.properties['esModule']
        systemProperty "esModule", module
    }
    outputs.upToDateWhen { false }

    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

dependencies {
    compile "org.scala-lang:scala-library:2.12.4"
    testCompile project(':tests-utils')
    testCompile project(':commons')
    testCompile 'io.jsonwebtoken:jjwt:0.9.1'
    testCompile 'com.jayway.jsonpath:json-path:2.2.0'
    testCompile 'org.gradle:gradle-tooling-api:4.10.2'
    testCompile 'com.mashape.unirest:unirest-java:1.4.9'
    testCompile 'org.slf4j:slf4j-api:1.7.25'
    testCompile 'ch.qos.logback:logback-classic:1.2.3'
    testCompile 'ch.qos.logback:logback-core:1.2.3'
    testCompile "org.elasticsearch.client:x-pack-transport:6.6.0"
    testCompile 'net.jodah:failsafe:2.0.1'
}

license {
    header rootProject.file('ReadonlyRESTLicenseHeader.txt')
    skipExistingHeaders true
    useDefaultMappings = false
    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}

task ldapserver(type:JavaExec) {
   systemProperties = System.properties
   main = 'tech.beshu.ror.integration.LDAPServer'
   classpath = sourceSets.test.runtimeClasspath
}
