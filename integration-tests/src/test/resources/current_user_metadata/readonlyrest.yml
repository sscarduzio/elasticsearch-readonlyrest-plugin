readonlyrest:

  access_control_rules:

    # ES containter initializer need this rule to configure ES instance after startup
    - name: "CONTAINER ADMIN"
      verbosity: error
      type: allow
      auth_key: admin:container

    - name: "User 1 - index1"
      filter: '{"query_string":{"query":"app:(cste)"}}'
      users: ["user1"]
      groups: [group2, group3]

    - name: "User 1 - index2"
      users: ["user1"]
      groups: [group2, group1]

    - name: "User 2"
      users: ["user2"]
      groups: [group2, group3]
      uri_re: "^/_readonlyrest/metadata/current_user/?$"
      kibana:
        access: ro
        index: "user2_kibana_index"
        hide_apps: ["user2_app1", "user2_app2", "/^Analytics\\|(?!(Maps)$).*$/"]
        allowed_api_paths:
          - "^/api/spaces/.*$"
          - http_method: GET
            http_path: "/api/spaces?test=12.2"
        metadata:
          a: 1
          b: true
          c: "text"
          d: [ "a","b" ]
          e:
            f: 1
          g: ~

    - name: "User 3"
      auth_key: "user3:pass"
      kibana:
        access: unrestricted
        index: "user3_kibana_index"
        hide_apps: ["user3_app1", "user3_app2"]

    - name: "User 4 - index1"
      users: ["user4"]
      groups: [group5]
      kibana:
        access: unrestricted
        index: "user4_group5_kibana_index"

    - name: "User 4 - index2"
      users: ["user4"]
      groups: [group6]
      kibana:
        access: unrestricted
        index: "user4_group6_kibana_index"
        template_index: "user4_group6_kibana_template_index"

  users:
    - username: user1
      groups: ["group1", "group3"]
      auth_key: "user1:pass"

    - username: user2
      groups: ["group2", "group4"]
      auth_key: "user2:pass"

    - username: user4
      groups:
        - id: group5
          name: "Group 5"
        - id: group6
          name: "Group 6"
      auth_key: "user4:pass"