readonlyrest:
  ssl:
    enable: true
    keystore_file: "keystore.jks"
    keystore_pass: readonlyrest
    key_pass: readonlyrest

  access_control_rules:
    - name: Container housekeeping is allowed
      type: allow
      auth_key: admin:container

    - name: Valid JWT token is present
      type: allow
      jwt_auth: "jwt1"

    - name: Valid JWT token is present in custom header
      type: allow
      jwt_auth: "jwt2"

    - name: Valid JWT token is present with roles
      type: allow
      jwt_auth: 
        name: "jwt3"
        roles: ["role_viewer", "role_xyz"]

    - name: Valid JWT token is present in custom header and header prefix
      type: allow
      jwt_auth: "jwt4"

  jwt:
    - name: jwt1
      signature_key: "123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456"
      user_claim: user

    - name: jwt2
      header_name: x-custom-header
      header_prefix: ""
      signature_key: "123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456"
      user_claim: user

    - name: jwt3
      signature_key: "1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890.1234567890"
      user_claim: user
      roles_claim: roles

    - name: jwt4
      header_name: x-custom-header2
      header_prefix: x-custom-prefix
      signature_key: "123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456.123456"
      user_claim: user



