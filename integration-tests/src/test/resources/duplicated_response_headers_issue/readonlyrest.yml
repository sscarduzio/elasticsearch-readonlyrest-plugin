readonlyrest:

  access_control_rules:

    - name: "CONTAINER ADMIN"
      verbosity: error
      type: allow
      auth_key: admin:container

    - name: "::KIBANA-SRV::"
      auth_key: kibana:kibana
      verbosity: error

    - name: "::LOGSTASH::"
      auth_key: logstash:logstash
      actions: ["cluster:monitor/main","indices:admin/types/exists","indices:data/read/*","indices:data/write/*","indices:admin/template/*","indices:admin/create"]
      indices: ["negotiation-*", "trade-*", "transation-*", "logstash-*"]
      verbosity: error

    - name: "Admin Tenancy"
      verbosity: error
      groups: ["Admins"]
      kibana:
        access: admin
        index: ".kibana"

    - name: "Template Tenancy"
      verbosity: error
      groups: ["Template"]
      kibana:
        access: admin
        index: ".kibana_template"

    - name: "011-data"
      external_authentication: "ExternalAuthService"
      groups_provider_authorization:
        user_groups_provider: "ExternalGroupService"
        groups: ["011"]
      indices: ["negotiation-*", "trade-*", "transation-*"]
      filter: '{"bool": { "must": { "match": { "firmid": "011" }}}}'

    - name: "011"
      external_authentication: "ExternalAuthService"
      groups_provider_authorization:
        user_groups_provider: "ExternalGroupService"
        groups: ["011"]
      kibana:
        access: rw
        index: ".kibana_@{user}"
        hide_apps: ["readonlyrest_kbn", "kibana:dev_tools", "/^(?!(Analytics\\|Management).*$).*$/"]

    - name: "013-data"
      external_authentication: "ExternalAuthService"
      groups_provider_authorization:
        user_groups_provider: "ExternalGroupService"
        groups: ["013"]
      indices: ["negotiation-*", "trade-*", "transation-*"]
      filter: '{"bool": { "must": { "match": { "firmid": "013" }}}}'

    - name: "013"
      external_authentication: "ExternalAuthService"
      groups_provider_authorization:
        user_groups_provider: "ExternalGroupService"
        groups: ["013"]
      kibana:
        access: rw
        index: ".kibana_@{user}"
        hide_apps: ["readonlyrest_kbn", "kibana:dev_tools", "/^(?!(Analytics\\|Management).*$).*$/"]

  external_authentication_service_configs:
    - name: "ExternalAuthService"
      authentication_endpoint: "http://{EXT1_HOST}:{EXT1_PORT}/auth"
      success_status_code: 200
      cache_ttl_in_sec: 1
      validate: false # SSL certificate validation (default to true)

  user_groups_providers:
    - name: "ExternalGroupService"
      groups_endpoint: "http://{EXT1_HOST}:{EXT1_PORT}/groups"
      auth_token_name: "token"
      auth_token_passed_as: QUERY_PARAM                        # HEADER OR QUERY_PARAM
      response_group_ids_json_path: "$..groups[?(@.id)].id"    # see: <https://github.com/json-path/JsonPath>
      response_group_names_json_path: "$..groups[?(@.name)].name"
      cache_ttl_in_sec: 1
      http_connection_settings:
        connection_timeout_in_sec: 5                           # default 2
        socket_timeout_in_sec: 3                               # default 5
        connection_request_timeout_in_sec: 3                   # default 5
        connection_pool_size: 10

  users:
    - username: admin
      auth_key: admin:admin
      groups: ["Admins", "Template"] # can hop between two tenancies with top-left drop-down menu