readonlyrest:
  ssl:
    enable: true
    keystore_file: "keystore.jks"
    keystore_pass: readonlyrest
    key_pass: readonlyrest

  access_control_rules:
    - name: Super user access
      verbosity: error
      type: allow
      groups: ["superuser"]
      indices: ["*"]
      actions: ["*"]

    - name: All ro access
      type: allow
      groups: ["allro"]
      indices: ["*"]
      actions: ["indices:data/read/*", "cluster:monitor/state", "indices:admin/get", "indices:admin/mappings/fields/get", "indices:admin/mappings/get", "indices:admin/aliases/get", "indices:admin/template/get"]

    - name: Kibana rw access
      type: allow
      groups: ["kibanarw"]
      indices: [".kibana*"]
      actions: ["indices:data/read/*","indices:data/write/*"]

    - name: Kibana ro access
      type: allow
      groups: ["kibanaro"]
      indices: [".kibana*"]
      actions: ["indices:data/read/*"]

    - name: Logs all access
      verbosity: error
      type: allow
      groups: ["logs"]
      indices: ["logs*"]
      actions: ["*"]

    - name: Logs ro access
      type: allow
      groups: ["logsro"]
      indices: ["logs*",".monitoring*"]
      actions: ["indices:monitor/settings/get", "indices:data/read/*", "cluster:monitor/state", "indices:admin/get", "indices:admin/mappings/fields/get", "indices:admin/mappings/get", "indices:admin/aliases/get", "indices:admin/template/get"]

    - name: Alibaba all access
      type: allow
      groups: ["alibaba"]
      indices: ["alibaba*"]
      actions: ["*"]

  users:
  - username: elastic
    auth_key: elastic:test
    groups: ["superuser"]

  - username: kibana
    auth_key: kibana:test
    groups: ["superuser"]

  - username: logstash
    auth_key: logstash:test
    groups: ["logs"]

  - username: alibaba
    auth_key: alibaba:test
    groups: ["alibaba", "kibanarw", "logsro"]

  obfuscated_headers: ["x-auth-key", "authorization"]