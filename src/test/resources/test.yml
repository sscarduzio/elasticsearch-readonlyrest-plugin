http.host: 0.0.0.0

xpack:
    monitoring.enabled: true
    security.enabled: false
    graph.enabled: false
    watcher.enabled: false

readonlyrest:
    # (De)activate plugin
    enable: true

    ssl:
      enable: true
      keystore_file: "/elasticsearch/plugins/readonlyrest/keystore.jks"
      keystore_pass: readonlyrest
      key_pass: readonlyrest

    # HTTP response body in case of forbidden request.
    # If this is null or omitted, the name of the first violated access control rule is returned (useful for debugging!)
    response_if_req_forbidden: <h1>Forbidden</h1>

    # Default policy is to forbid everything, so let's define a whitelist
    access_control_rules:

    - name: "::Facebook posts::"
      ldap_auth:
        name: "ldap2"
        groups: ["group3"]
#      indices: ["twitter"]

    - name: "::Facebook posts::2"
      ldap_authentication:
        name: "ldap2"
#        groups: ["group3"]

    - name: "::Facebook posts::2222"
      type: allow
      auth_key_sha1: 2bc37a406bd743e2b7a4cb33efc0c52bc2cb03f0 #claire:p455key
      kibana_access: rw
      auth_key: logstash:logstash
      actions: ["indices:data/read/*"]
      methods: GET
      accept_x-forwarded-for_header: true
      hosts: [127.0.0.1]
      indices: ["facebook"]
      indices_rewrite: [target1, target2, replacement]
      proxy_auth:
        proxy_auth_config: "proxy1"
        users: ["*"]
      groups_provider_authorization:
        user_groups_provider: "GroupsService2"
        groups: ["group3"]
        cache_ttl_in_sec: 60
      external_authentication: "ext2"
      max_body_length: 100

    - name: Accept requests from users in group team1 on index1
      type: allow
      groups: ["team1"]
      indices: ["index1"]

    - name: Accept requests from users in group team2 on index2
      type: allow
      groups: ["team2"]
      indices: ["index2"]

    - name: Accept requests from users in groups team1 or team2 on index3
      type: allow
      groups: ["team1", "team2"]
      indices: ["index3"]

    users:

    - username: alice
      auth_key: alice:p455phrase
      groups: ["team1"]

    - username: bob
      auth_key: bob:s3cr37
      groups: ["team2", "team4"]

    - username: claire
      auth_key_sha1: 2bc37a406bd743e2b7a4cb33efc0c52bc2cb03f0 #claire:p455key
      groups: ["team1", "team5"]

    proxy_auth_configs:

    - name: "proxy1"
      user_id_header: "X-Auth-Token"

    ldaps:

    - name: ldap2
      host: "{LDAP1}"
      port: 389                                                 # default 389
      ssl_enabled: false                                        # default true
      ssl_trust_all_certs: true                                 # default false
      bind_dn: "cn=admin,dc=example,dc=com"                     # skip for anonymous bind
      bind_password: "password"                                 # skip for anonymous bind
      search_user_base_DN: "ou=People,dc=example,dc=com"
      search_groups_base_DN: "ou=Groups,dc=example,dc=com"
      user_id_attribute: "uid"                                  # default "uid"
      unique_member_attribute: "uniqueMember"                   # default "uniqueMember"
      connection_pool_size: 10                                  # default 30
      connection_timeout_in_sec: 10                             # default 1
      request_timeout_in_sec: 10                                # default 1
      cache_ttl_in_sec: 60                                      # default 0 - cache disabled

    user_groups_providers:

    - name: GroupsService1
      groups_endpoint: "http://GROUPS1:8080/groups" # todo: {GROUPS1}
      auth_token_name: "user"
      auth_token_passed_as: QUERY_PARAM
      response_groups_json_path: "$..groups[?(@.name)].name"

    - name: GroupsService2
      groups_endpoint: "http://GROUPS2:8080/groups" # todo: {GROUPS2}
      auth_token_name: "auth_token"
      auth_token_passed_as: HEADER
      response_groups_json_path: "$..groups[?(@.name)].name"

    external_authentication_service_configs:

    - name: "ext1"
      authentication_endpoint: "http://localhost:8080/auth1"
      success_status_code: 200
      cache_ttl_in_sec: 60

    - name: "ext2"
      authentication_endpoint: "http://localhost:8080/auth2"
      success_status_code: 204
      cache_ttl_in_sec: 60
