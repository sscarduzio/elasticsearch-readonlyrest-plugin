# ======================== Elasticsearch Configuration =========================
#
# NOTE: Elasticsearch comes with reasonable defaults for most settings.
#       Before you set out to tweak and tune the configuration, make sure you
#       understand what are you trying to accomplish and the consequences.
#
# The primary way of configuring a node is via this file. This template lists
# the most important settings you may want to configure for a production cluster.
#
# Please see the documentation for further information on configuration options:
# <https://www.elastic.co/guide/en/elasticsearch/reference/5.0/settings.html>
#
# ---------------------------------- Cluster -----------------------------------
#
# Use a descriptive name for your cluster:
#
#cluster.name: my-application
#
# ------------------------------------ Node ------------------------------------
#
# Use a descriptive name for the node:
#
#node.name: node-1
#
# Add custom attributes to the node:
#
#node.attr.rack: r1
#
# ----------------------------------- Paths ------------------------------------
#
# Path to directory where to store the data (separate multiple locations by comma):
#
#path.data: /path/to/data
#
# Path to log files:
#
#path.logs: /path/to/logs
#
# ----------------------------------- Memory -----------------------------------
#
# Lock the memory on startup:
#
#bootstrap.memory_lock: true
#
# Make sure that the heap size is set to about half the memory available
# on the system and that the owner of the process is allowed to use this
# limit.
#
# Elasticsearch performs poorly when the system is swapping the memory.
#
# ---------------------------------- Network -----------------------------------
#
# Set the bind address to a specific IP (IPv4 or IPv6):
#
#network.host: 192.168.0.1
#
# Set a custom port for HTTP:
#
#http.port: 9200
#
# For more information, see the documentation at:
# <https://www.elastic.co/guide/en/elasticsearch/reference/5.0/modules-network.html>
#
# --------------------------------- Discovery ----------------------------------
#
# Pass an initial list of hosts to perform discovery when new node is started:
# The default list of hosts is ["127.0.0.1", "[::1]"]
#
#discovery.zen.ping.unicast.hosts: ["host1", "host2"]
#
# Prevent the "split brain" by configuring the majority of nodes (total number of nodes / 2 + 1):
#
#discovery.zen.minimum_master_nodes: 3
#
# For more information, see the documentation at:
# <https://www.elastic.co/guide/en/elasticsearch/reference/5.0/modules-discovery-zen.html>
#
# ---------------------------------- Gateway -----------------------------------
#
# Block initial recovery after a full cluster restart until N nodes are started:
#
#gateway.recover_after_nodes: 3
#
# For more information, see the documentation at:
# <https://www.elastic.co/guide/en/elasticsearch/reference/5.0/modules-gateway.html>
#
# ---------------------------------- Various -----------------------------------
#
# Require explicit names when deleting indices:
#
#action.destructive_requires_name: true
http.type: ssl_netty4
transport.type: local
readonlyrest:
    # (De)activate plugin
    enable: true

    ssl:
      enable: false
      keystore_file: "/me/tmp/elasticsearch-5.0.1/plugins/readonlyrest/keystore.jks"
      keystore_pass: readonlyrest
      key_pass: readonlyrest

    # HTTP response body in case of forbidden request. 
    # If this is null or omitted, the name of the first violated access control rule is returned (useful for debugging!)
    response_if_req_forbidden: <h1>Forbidden</h1>
    
    # Default policy is to forbid everything, so let's define a whitelist

    access_control_rules:

    # Logs in via HTTP Basic Authentication, has RW access to kibana but zero access to non-kibana actions.
#    - name: "::RO+ DEVELOPER::"
#      type: allow
#      indices: ["<no-index>", ".kibana", ".kibana-devnull", "logstash-*", "default"]
#
#    - name: "::KIBANA-SRV::"
#      # auth_key is good for testing, but replace it with `auth_key_sha1`!
#      auth_key: kibana1:kibana1
#      type: allow
##
#    # Cannot configure or edit dashboards and visualizations.
#    - name: "::RO DEVELOPER::"
#      type: allow
#      kibana_access: ro
#      indices: ["<no-index>", ".kibana", ".kibana-devnull", "logstash-*", "default"]

    - name: Accept requests from users in groups team1 on blog
      type: allow
      groups: ["team1"]
      indices: ["blog"]

    - name: Accept requests from users in group team2 on blog2
      type: allow
      ldap_auth:
        - name: "TouK"
          groups: ["ksiegowosc", "test"]
        - name: "example"
          groups: ["group1", "group3"]
      indices: ["blog2"]

    users:

    - username: user
      auth_key_sha1: b2619aa1529dfdc4248e6edbf3c1b2a2b014cf6d
      groups: ["team1"]

    - username: b2
      auth_key: b2:test2
      groups: ["team2"]

    ldaps:

    - name: TouK
      host: "ldap.touk.pl"
      port: 636
      ssl_enabled: true
      ssl_trust_all_certs: true
      search_user_base_DN: "ou=Touki,ou=People,dc=touk,dc=pl"
      search_groups_base_DN: "ou=Group,dc=touk,dc=pl"
      connection_pool_size: 10
      connection_timeout_in_sec: 10
      request_timeout_in_sec: 10
      cache_ttl_in_sec: 60

    - name: example
      host: "localhost"
      port: 389
      ssl_enabled: false
      bind_dn: "cn=admin,dc=example,dc=com"
      bind_password: "password"
      search_user_base_DN: "ou=People,dc=example,dc=com"
      search_groups_base_DN: "ou=Groups,dc=example,dc=com"
      connection_pool_size: 10
      connection_timeout_in_sec: 10
      request_timeout_in_sec: 10