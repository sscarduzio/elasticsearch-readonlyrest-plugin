/*
 *    This file is part of ReadonlyREST.
 *
 *    ReadonlyREST is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    ReadonlyREST is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with ReadonlyREST.  If not, see http://www.gnu.org/licenses/
 */
buildscript {
    ext {
        esVersion = project.properties['esVersion'] ?: "unknown"
    }
}

plugins {
    id "readonlyrest.base-common-conventions"

    id "com.github.johnrengelman.shadow" version "7.1.2"
    id "com.github.maiflai.scalatest"    version "0.32"
    id "java-library"
}

repositories {
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://jitpack.io' }
}

dependencyCheck {
    /*
       Severity	Base Score
       None     0
       Low      0.1-3.9
       Medium   4.0-6.9
       High     7.0-8.9
       Critical 9.0-10.0
     */
    failBuildOnCVSS = 3
    scanConfigurations = ['runtimeClasspath']
    suppressionFiles = ["${project.rootDir}/supressions_cve.xml"]
}

test {
    testLogging {
        showStandardStreams = true
        exceptionFormat = 'full'
        events "standardOut", "started", "passed", "skipped", "failed"
    }
}

dependencies {
    api group: 'org.ow2.asm',                   name: 'asm',                              version: '9.3'
    api group: 'io.kevinlee',                   name: 'just-semver_2.12',                 version: '0.5.0'
    api group: 'com.lihaoyi',                   name: 'os-lib_2.12',                      version: '0.8.1'
}

compileScala {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.compilerArgs << "-Ywarn-macros:after"
}

shadowJar {
    configurations = [project.configurations.runtimeClasspath]
}

// Configure Auto Relocation
import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

tasks.register('relocateShadowJar', ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "tech.beshu.ror.tools"
}

tasks.shadowJar.dependsOn tasks.relocateShadowJar

tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}


