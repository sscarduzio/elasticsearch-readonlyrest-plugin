/*
 *    This file is part of ReadonlyREST.
 *
 *    ReadonlyREST is free software: you can redistribute it and/or modify
 *    it under the terms of the GNU General Public License as published by
 *    the Free Software Foundation, either version 3 of the License, or
 *    (at your option) any later version.
 *
 *    ReadonlyREST is distributed in the hope that it will be useful,
 *    but WITHOUT ANY WARRANTY; without even the implied warranty of
 *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *    GNU General Public License for more details.
 *
 *    You should have received a copy of the GNU General Public License
 *    along with ReadonlyREST.  If not, see http://www.gnu.org/licenses/
 */

group = 'org.elasticsearch.plugin'
version = pluginVersion + '_es' + esVersion

buildscript {
    ext {
        publishedPluginVersion = project.properties['pluginVersion']
        pluginVersion = project.properties['pluginVersion']
        esVersion = project.properties['esVersion']
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.elasticsearch.gradle:build-tools:' + esVersion
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'elasticsearch.esplugin'

esplugin {
    name project.properties['pluginName']
    description 'Safely expose Elasticsearch REST API'
    classname 'org.elasticsearch.plugin.readonlyrest.es.ReadonlyRestPlugin'
}

configurations.all {
    resolutionStrategy {
        force "commons-logging:commons-logging:1.1.3"
        force "junit:junit:4.12"
        force "org.slf4j:slf4j-api:1.7.21"
        force "commons-io:commons-io:2.5"
        force "com.google.guava:guava:21.0"
        force 'net.minidev:json-smart:2.3'
        force 'org.ow2.asm:asm:5.0.4'
    }
}

dependencies {
    compile project(':core')
    compile 'org.elasticsearch.plugin:transport-netty4-client:' + esVersion
    compile 'org.elasticsearch.client:rest:' + esVersion
}

run {
    systemProperty "java.security.policy", "src/main/plugin-metadata/plugin-security.policy"
    systemProperty "es.path.home", "src/test/eshome"
    jvmArgs += " -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath, algorithm: 'sha1'
    }
}
// Set to false to not use elasticsearch checkstyle rules
checkstyleMain.enabled = true
checkstyleTest.enabled = true
dependencyLicenses.enabled = true

// FIXME thirdparty audit needs to be enabled
thirdPartyAudit.enabled = false

// Uncomment this to skip license header checks
licenseHeaders.enabled = false
namingConventions.enabled = false
forbiddenApisMain.enabled = false
forbiddenApisTest.enabled = false
integTest.enabled = false
jarHell.enabled = false


test {
    systemProperty "project.dir", rootProject.project(':es53x').projectDir
}
