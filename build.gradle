

buildscript {
    ext {
        publishedPluginVersion = '1.13.3'
        pluginVersion = '1.13.3'
        esVersion = '5.2.1'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.elasticsearch.gradle:build-tools:' + esVersion
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.10.0'
    }
}

group = 'org.elasticsearch.plugin'
version = pluginVersion + '_es' + esVersion

apply plugin: 'java'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'license'

esplugin {
    name 'readonlyrest'
    description 'Safely expose Elasticsearch REST API'
    classname 'org.elasticsearch.plugin.readonlyrest.wiring.ReadonlyRestPlugin'
}

license {
    header rootProject.file('ReadonlyRESTLicenceHeader.txt')
    skipExistingHeaders true
    useDefaultMappings = false
    mapping {
        java='SLASHSTAR_STYLE'
    }
}

configurations.getByName("testRuntime") {
    resolutionStrategy {
        force "commons-logging:commons-logging:1.1.3"
        force "junit:junit:4.12"
        force "org.slf4j:slf4j-api:1.7.21"
        force "commons-io:commons-io:2.5"
    }
}
configurations {
    all*.exclude group: "org.elasticsearch.test", module: "framework"
}

dependencies {
    compile 'com.google.guava:guava:21.0'
    compile 'org.elasticsearch.plugin:transport-netty4-client:' + esVersion
    compile 'com.unboundid:unboundid-ldapsdk:3.2.0'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'junit:junit:4.12'
    testCompile('org.testcontainers:testcontainers:1.1.9')
    testRuntime('org.testcontainers:testcontainers:1.1.9')
}

task showFiles << {
    configurations.compile.each { println it.name }
}

run {
    systemProperty "java.security.policy", "src/main/plugin-metadata/plugin-security.policy"
    systemProperty "es.path.home", "src/test/eshome"
    jvmArgs += " -agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8000"

}
tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath, algorithm: 'sha1'
    }
}
// Set to false to not use elasticsearch checkstyle rules
checkstyleMain.enabled = true
checkstyleTest.enabled = true

// FIXME dependency license check needs to be enabled
dependencyLicenses.enabled = true

// FIXME thirdparty audit needs to be enabled
thirdPartyAudit.enabled = false

// Uncomment this to skip license header checks
licenseHeaders.enabled = false
namingConventions.enabled = false
forbiddenApisMain.enabled = false
forbiddenApisTest.enabled = false
integTest.enabled = false
